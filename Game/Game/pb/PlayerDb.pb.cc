// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerDb.proto

#include "PlayerDb.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr MsgPlayerBagItem_AttrEntry_DoNotUse::MsgPlayerBagItem_AttrEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MsgPlayerBagItem_AttrEntry_DoNotUseDefaultTypeInternal {
  constexpr MsgPlayerBagItem_AttrEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgPlayerBagItem_AttrEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MsgPlayerBagItem_AttrEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgPlayerBagItem_AttrEntry_DoNotUseDefaultTypeInternal _MsgPlayerBagItem_AttrEntry_DoNotUse_default_instance_;
constexpr MsgPlayerBagItem_DynaAttrEntry_DoNotUse::MsgPlayerBagItem_DynaAttrEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MsgPlayerBagItem_DynaAttrEntry_DoNotUseDefaultTypeInternal {
  constexpr MsgPlayerBagItem_DynaAttrEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgPlayerBagItem_DynaAttrEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MsgPlayerBagItem_DynaAttrEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgPlayerBagItem_DynaAttrEntry_DoNotUseDefaultTypeInternal _MsgPlayerBagItem_DynaAttrEntry_DoNotUse_default_instance_;
constexpr MsgPlayerBagItem::MsgPlayerBagItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : attr_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , dynaattr_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , skills_()
  , _skills_cached_byte_size_()
  , uid_(0)
  , id_(0)
  , cnt_(PROTOBUF_LONGLONG(0)){}
struct MsgPlayerBagItemDefaultTypeInternal {
  constexpr MsgPlayerBagItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgPlayerBagItemDefaultTypeInternal() {}
  union {
    MsgPlayerBagItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgPlayerBagItemDefaultTypeInternal _MsgPlayerBagItem_default_instance_;
constexpr MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse::MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUseDefaultTypeInternal {
  constexpr MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUseDefaultTypeInternal _MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse_default_instance_;
constexpr MsgPlayerBag::MsgPlayerBag(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msgplayerbagitem_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , cap_(0){}
struct MsgPlayerBagDefaultTypeInternal {
  constexpr MsgPlayerBagDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgPlayerBagDefaultTypeInternal() {}
  union {
    MsgPlayerBag _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgPlayerBagDefaultTypeInternal _MsgPlayerBag_default_instance_;
constexpr MsgHero_MsgPlayerBagItemEntry_DoNotUse::MsgHero_MsgPlayerBagItemEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MsgHero_MsgPlayerBagItemEntry_DoNotUseDefaultTypeInternal {
  constexpr MsgHero_MsgPlayerBagItemEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgHero_MsgPlayerBagItemEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MsgHero_MsgPlayerBagItemEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgHero_MsgPlayerBagItemEntry_DoNotUseDefaultTypeInternal _MsgHero_MsgPlayerBagItemEntry_DoNotUse_default_instance_;
constexpr MsgHero_AttrsEntry_DoNotUse::MsgHero_AttrsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MsgHero_AttrsEntry_DoNotUseDefaultTypeInternal {
  constexpr MsgHero_AttrsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgHero_AttrsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MsgHero_AttrsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgHero_AttrsEntry_DoNotUseDefaultTypeInternal _MsgHero_AttrsEntry_DoNotUse_default_instance_;
constexpr MsgHero::MsgHero(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msgplayerbagitem_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , attrs_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , uid_(0)
  , id_(0)
  , lv_(0){}
struct MsgHeroDefaultTypeInternal {
  constexpr MsgHeroDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgHeroDefaultTypeInternal() {}
  union {
    MsgHero _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgHeroDefaultTypeInternal _MsgHero_default_instance_;
constexpr MsgPlayer_MsgPlayerBagEntry_DoNotUse::MsgPlayer_MsgPlayerBagEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MsgPlayer_MsgPlayerBagEntry_DoNotUseDefaultTypeInternal {
  constexpr MsgPlayer_MsgPlayerBagEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgPlayer_MsgPlayerBagEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MsgPlayer_MsgPlayerBagEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgPlayer_MsgPlayerBagEntry_DoNotUseDefaultTypeInternal _MsgPlayer_MsgPlayerBagEntry_DoNotUse_default_instance_;
constexpr MsgPlayer_MsgHeroEntry_DoNotUse::MsgPlayer_MsgHeroEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MsgPlayer_MsgHeroEntry_DoNotUseDefaultTypeInternal {
  constexpr MsgPlayer_MsgHeroEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgPlayer_MsgHeroEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MsgPlayer_MsgHeroEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgPlayer_MsgHeroEntry_DoNotUseDefaultTypeInternal _MsgPlayer_MsgHeroEntry_DoNotUse_default_instance_;
constexpr MsgPlayer::MsgPlayer(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msgplayerbag_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , msghero_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uid_(0){}
struct MsgPlayerDefaultTypeInternal {
  constexpr MsgPlayerDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgPlayerDefaultTypeInternal() {}
  union {
    MsgPlayer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgPlayerDefaultTypeInternal _MsgPlayer_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_PlayerDb_2eproto[11];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_PlayerDb_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_PlayerDb_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_PlayerDb_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem_AttrEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem_AttrEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem_AttrEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem_AttrEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem_DynaAttrEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem_DynaAttrEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem_DynaAttrEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem_DynaAttrEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem, uid_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem, id_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem, cnt_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem, attr_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem, dynaattr_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBagItem, skills_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBag, cap_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayerBag, msgplayerbagitem_),
  PROTOBUF_FIELD_OFFSET(::MsgHero_MsgPlayerBagItemEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MsgHero_MsgPlayerBagItemEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MsgHero_MsgPlayerBagItemEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::MsgHero_MsgPlayerBagItemEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::MsgHero_AttrsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MsgHero_AttrsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MsgHero_AttrsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::MsgHero_AttrsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MsgHero, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MsgHero, uid_),
  PROTOBUF_FIELD_OFFSET(::MsgHero, id_),
  PROTOBUF_FIELD_OFFSET(::MsgHero, lv_),
  PROTOBUF_FIELD_OFFSET(::MsgHero, msgplayerbagitem_),
  PROTOBUF_FIELD_OFFSET(::MsgHero, attrs_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayer_MsgPlayerBagEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayer_MsgPlayerBagEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MsgPlayer_MsgPlayerBagEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayer_MsgPlayerBagEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::MsgPlayer_MsgHeroEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayer_MsgHeroEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MsgPlayer_MsgHeroEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayer_MsgHeroEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MsgPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MsgPlayer, uid_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayer, name_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayer, msgplayerbag_),
  PROTOBUF_FIELD_OFFSET(::MsgPlayer, msghero_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::MsgPlayerBagItem_AttrEntry_DoNotUse)},
  { 9, 16, sizeof(::MsgPlayerBagItem_DynaAttrEntry_DoNotUse)},
  { 18, -1, sizeof(::MsgPlayerBagItem)},
  { 29, 36, sizeof(::MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse)},
  { 38, -1, sizeof(::MsgPlayerBag)},
  { 45, 52, sizeof(::MsgHero_MsgPlayerBagItemEntry_DoNotUse)},
  { 54, 61, sizeof(::MsgHero_AttrsEntry_DoNotUse)},
  { 63, -1, sizeof(::MsgHero)},
  { 73, 80, sizeof(::MsgPlayer_MsgPlayerBagEntry_DoNotUse)},
  { 82, 89, sizeof(::MsgPlayer_MsgHeroEntry_DoNotUse)},
  { 91, -1, sizeof(::MsgPlayer)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MsgPlayerBagItem_AttrEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MsgPlayerBagItem_DynaAttrEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MsgPlayerBagItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MsgPlayerBag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MsgHero_MsgPlayerBagItemEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MsgHero_AttrsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MsgHero_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MsgPlayer_MsgPlayerBagEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MsgPlayer_MsgHeroEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MsgPlayer_default_instance_),
};

const char descriptor_table_protodef_PlayerDb_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016PlayerDb.proto\"\204\002\n\020MsgPlayerBagItem\022\013\n"
  "\003uid\030\001 \001(\005\022\n\n\002id\030\002 \001(\005\022\013\n\003cnt\030\003 \001(\003\022)\n\004a"
  "ttr\030\004 \003(\0132\033.MsgPlayerBagItem.AttrEntry\0221"
  "\n\010dynaAttr\030\005 \003(\0132\037.MsgPlayerBagItem.Dyna"
  "AttrEntry\022\016\n\006skills\030\006 \003(\005\032+\n\tAttrEntry\022\013"
  "\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\032/\n\rDynaAt"
  "trEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\""
  "\246\001\n\014MsgPlayerBag\022\013\n\003cap\030\001 \001(\005\022=\n\020msgPlay"
  "erBagItem\030\002 \003(\0132#.MsgPlayerBag.MsgPlayer"
  "BagItemEntry\032J\n\025MsgPlayerBagItemEntry\022\013\n"
  "\003key\030\001 \001(\005\022 \n\005value\030\002 \001(\0132\021.MsgPlayerBag"
  "Item:\0028\001\"\206\002\n\007MsgHero\022\013\n\003uid\030\001 \001(\005\022\n\n\002id\030"
  "\002 \001(\005\022\n\n\002lv\030\003 \001(\005\0228\n\020msgPlayerBagItem\030\004 "
  "\003(\0132\036.MsgHero.MsgPlayerBagItemEntry\022\"\n\005a"
  "ttrs\030\005 \003(\0132\023.MsgHero.AttrsEntry\032J\n\025MsgPl"
  "ayerBagItemEntry\022\013\n\003key\030\001 \001(\005\022 \n\005value\030\002"
  " \001(\0132\021.MsgPlayerBagItem:\0028\001\032,\n\nAttrsEntr"
  "y\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\"\202\002\n\tMs"
  "gPlayer\022\013\n\003uid\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\0222\n\014ms"
  "gPlayerBag\030\003 \003(\0132\034.MsgPlayer.MsgPlayerBa"
  "gEntry\022(\n\007msgHero\030\004 \003(\0132\027.MsgPlayer.MsgH"
  "eroEntry\032B\n\021MsgPlayerBagEntry\022\013\n\003key\030\001 \001"
  "(\005\022\034\n\005value\030\002 \001(\0132\r.MsgPlayerBag:\0028\001\0328\n\014"
  "MsgHeroEntry\022\013\n\003key\030\001 \001(\005\022\027\n\005value\030\002 \001(\013"
  "2\010.MsgHero:\0028\001b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_PlayerDb_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_PlayerDb_2eproto = {
  false, false, 982, descriptor_table_protodef_PlayerDb_2eproto, "PlayerDb.proto", 
  &descriptor_table_PlayerDb_2eproto_once, nullptr, 0, 11,
  schemas, file_default_instances, TableStruct_PlayerDb_2eproto::offsets,
  file_level_metadata_PlayerDb_2eproto, file_level_enum_descriptors_PlayerDb_2eproto, file_level_service_descriptors_PlayerDb_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_PlayerDb_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_PlayerDb_2eproto);
  return descriptor_table_PlayerDb_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_PlayerDb_2eproto(&descriptor_table_PlayerDb_2eproto);

// ===================================================================

MsgPlayerBagItem_AttrEntry_DoNotUse::MsgPlayerBagItem_AttrEntry_DoNotUse() {}
MsgPlayerBagItem_AttrEntry_DoNotUse::MsgPlayerBagItem_AttrEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MsgPlayerBagItem_AttrEntry_DoNotUse::MergeFrom(const MsgPlayerBagItem_AttrEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MsgPlayerBagItem_AttrEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MsgPlayerBagItem_AttrEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MsgPlayerBagItem_DynaAttrEntry_DoNotUse::MsgPlayerBagItem_DynaAttrEntry_DoNotUse() {}
MsgPlayerBagItem_DynaAttrEntry_DoNotUse::MsgPlayerBagItem_DynaAttrEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MsgPlayerBagItem_DynaAttrEntry_DoNotUse::MergeFrom(const MsgPlayerBagItem_DynaAttrEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MsgPlayerBagItem_DynaAttrEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MsgPlayerBagItem_DynaAttrEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class MsgPlayerBagItem::_Internal {
 public:
};

MsgPlayerBagItem::MsgPlayerBagItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  attr_(arena),
  dynaattr_(arena),
  skills_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MsgPlayerBagItem)
}
MsgPlayerBagItem::MsgPlayerBagItem(const MsgPlayerBagItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      skills_(from.skills_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  attr_.MergeFrom(from.attr_);
  dynaattr_.MergeFrom(from.dynaattr_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cnt_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(cnt_));
  // @@protoc_insertion_point(copy_constructor:MsgPlayerBagItem)
}

void MsgPlayerBagItem::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&uid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cnt_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(cnt_));
}

MsgPlayerBagItem::~MsgPlayerBagItem() {
  // @@protoc_insertion_point(destructor:MsgPlayerBagItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgPlayerBagItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MsgPlayerBagItem::ArenaDtor(void* object) {
  MsgPlayerBagItem* _this = reinterpret_cast< MsgPlayerBagItem* >(object);
  (void)_this;
}
void MsgPlayerBagItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgPlayerBagItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MsgPlayerBagItem::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgPlayerBagItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attr_.Clear();
  dynaattr_.Clear();
  skills_.Clear();
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cnt_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(cnt_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgPlayerBagItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 cnt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          cnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<int32, int32> attr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&attr_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // map<int32, int32> dynaAttr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&dynaattr_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated int32 skills = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_skills(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48) {
          _internal_add_skills(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgPlayerBagItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPlayerBagItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_id(), target);
  }

  // int64 cnt = 3;
  if (this->cnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_cnt(), target);
  }

  // map<int32, int32> attr = 4;
  if (!this->_internal_attr().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_attr().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_attr().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_attr().begin();
          it != this->_internal_attr().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MsgPlayerBagItem_AttrEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_attr().begin();
          it != this->_internal_attr().end(); ++it) {
        target = MsgPlayerBagItem_AttrEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
      }
    }
  }

  // map<int32, int32> dynaAttr = 5;
  if (!this->_internal_dynaattr().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_dynaattr().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_dynaattr().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_dynaattr().begin();
          it != this->_internal_dynaattr().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MsgPlayerBagItem_DynaAttrEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_dynaattr().begin();
          it != this->_internal_dynaattr().end(); ++it) {
        target = MsgPlayerBagItem_DynaAttrEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
      }
    }
  }

  // repeated int32 skills = 6;
  {
    int byte_size = _skills_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          6, _internal_skills(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPlayerBagItem)
  return target;
}

size_t MsgPlayerBagItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgPlayerBagItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, int32> attr = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_attr_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
      it = this->_internal_attr().begin();
      it != this->_internal_attr().end(); ++it) {
    total_size += MsgPlayerBagItem_AttrEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, int32> dynaAttr = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_dynaattr_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
      it = this->_internal_dynaattr().begin();
      it != this->_internal_dynaattr().end(); ++it) {
    total_size += MsgPlayerBagItem_DynaAttrEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated int32 skills = 6;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->skills_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _skills_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int64 cnt = 3;
  if (this->cnt() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_cnt());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgPlayerBagItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgPlayerBagItem)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgPlayerBagItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgPlayerBagItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgPlayerBagItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgPlayerBagItem)
    MergeFrom(*source);
  }
}

void MsgPlayerBagItem::MergeFrom(const MsgPlayerBagItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgPlayerBagItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attr_.MergeFrom(from.attr_);
  dynaattr_.MergeFrom(from.dynaattr_);
  skills_.MergeFrom(from.skills_);
  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.cnt() != 0) {
    _internal_set_cnt(from._internal_cnt());
  }
}

void MsgPlayerBagItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgPlayerBagItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPlayerBagItem::CopyFrom(const MsgPlayerBagItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgPlayerBagItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPlayerBagItem::IsInitialized() const {
  return true;
}

void MsgPlayerBagItem::InternalSwap(MsgPlayerBagItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  attr_.Swap(&other->attr_);
  dynaattr_.Swap(&other->dynaattr_);
  skills_.InternalSwap(&other->skills_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgPlayerBagItem, cnt_)
      + sizeof(MsgPlayerBagItem::cnt_)
      - PROTOBUF_FIELD_OFFSET(MsgPlayerBagItem, uid_)>(
          reinterpret_cast<char*>(&uid_),
          reinterpret_cast<char*>(&other->uid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgPlayerBagItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse::MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse() {}
MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse::MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse::MergeFrom(const MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class MsgPlayerBag::_Internal {
 public:
};

MsgPlayerBag::MsgPlayerBag(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  msgplayerbagitem_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MsgPlayerBag)
}
MsgPlayerBag::MsgPlayerBag(const MsgPlayerBag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msgplayerbagitem_.MergeFrom(from.msgplayerbagitem_);
  cap_ = from.cap_;
  // @@protoc_insertion_point(copy_constructor:MsgPlayerBag)
}

void MsgPlayerBag::SharedCtor() {
cap_ = 0;
}

MsgPlayerBag::~MsgPlayerBag() {
  // @@protoc_insertion_point(destructor:MsgPlayerBag)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgPlayerBag::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MsgPlayerBag::ArenaDtor(void* object) {
  MsgPlayerBag* _this = reinterpret_cast< MsgPlayerBag* >(object);
  (void)_this;
}
void MsgPlayerBag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgPlayerBag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MsgPlayerBag::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgPlayerBag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgplayerbagitem_.Clear();
  cap_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgPlayerBag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 cap = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cap_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<int32, .MsgPlayerBagItem> msgPlayerBagItem = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&msgplayerbagitem_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgPlayerBag::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPlayerBag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cap = 1;
  if (this->cap() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_cap(), target);
  }

  // map<int32, .MsgPlayerBagItem> msgPlayerBagItem = 2;
  if (!this->_internal_msgplayerbagitem().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBagItem >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_msgplayerbagitem().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_msgplayerbagitem().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBagItem >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBagItem >::const_iterator
          it = this->_internal_msgplayerbagitem().begin();
          it != this->_internal_msgplayerbagitem().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBagItem >::const_iterator
          it = this->_internal_msgplayerbagitem().begin();
          it != this->_internal_msgplayerbagitem().end(); ++it) {
        target = MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPlayerBag)
  return target;
}

size_t MsgPlayerBag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgPlayerBag)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .MsgPlayerBagItem> msgPlayerBagItem = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_msgplayerbagitem_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBagItem >::const_iterator
      it = this->_internal_msgplayerbagitem().begin();
      it != this->_internal_msgplayerbagitem().end(); ++it) {
    total_size += MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // int32 cap = 1;
  if (this->cap() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cap());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgPlayerBag::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgPlayerBag)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgPlayerBag* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgPlayerBag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgPlayerBag)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgPlayerBag)
    MergeFrom(*source);
  }
}

void MsgPlayerBag::MergeFrom(const MsgPlayerBag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgPlayerBag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msgplayerbagitem_.MergeFrom(from.msgplayerbagitem_);
  if (from.cap() != 0) {
    _internal_set_cap(from._internal_cap());
  }
}

void MsgPlayerBag::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgPlayerBag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPlayerBag::CopyFrom(const MsgPlayerBag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgPlayerBag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPlayerBag::IsInitialized() const {
  return true;
}

void MsgPlayerBag::InternalSwap(MsgPlayerBag* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msgplayerbagitem_.Swap(&other->msgplayerbagitem_);
  swap(cap_, other->cap_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgPlayerBag::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

MsgHero_MsgPlayerBagItemEntry_DoNotUse::MsgHero_MsgPlayerBagItemEntry_DoNotUse() {}
MsgHero_MsgPlayerBagItemEntry_DoNotUse::MsgHero_MsgPlayerBagItemEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MsgHero_MsgPlayerBagItemEntry_DoNotUse::MergeFrom(const MsgHero_MsgPlayerBagItemEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MsgHero_MsgPlayerBagItemEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MsgHero_MsgPlayerBagItemEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MsgHero_AttrsEntry_DoNotUse::MsgHero_AttrsEntry_DoNotUse() {}
MsgHero_AttrsEntry_DoNotUse::MsgHero_AttrsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MsgHero_AttrsEntry_DoNotUse::MergeFrom(const MsgHero_AttrsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MsgHero_AttrsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MsgHero_AttrsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class MsgHero::_Internal {
 public:
};

MsgHero::MsgHero(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  msgplayerbagitem_(arena),
  attrs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MsgHero)
}
MsgHero::MsgHero(const MsgHero& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msgplayerbagitem_.MergeFrom(from.msgplayerbagitem_);
  attrs_.MergeFrom(from.attrs_);
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&lv_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(lv_));
  // @@protoc_insertion_point(copy_constructor:MsgHero)
}

void MsgHero::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&uid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&lv_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(lv_));
}

MsgHero::~MsgHero() {
  // @@protoc_insertion_point(destructor:MsgHero)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgHero::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MsgHero::ArenaDtor(void* object) {
  MsgHero* _this = reinterpret_cast< MsgHero* >(object);
  (void)_this;
}
void MsgHero::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgHero::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MsgHero::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgHero)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgplayerbagitem_.Clear();
  attrs_.Clear();
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lv_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(lv_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgHero::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 lv = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          lv_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<int32, .MsgPlayerBagItem> msgPlayerBagItem = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&msgplayerbagitem_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // map<int32, int32> attrs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&attrs_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgHero::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgHero)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_id(), target);
  }

  // int32 lv = 3;
  if (this->lv() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_lv(), target);
  }

  // map<int32, .MsgPlayerBagItem> msgPlayerBagItem = 4;
  if (!this->_internal_msgplayerbagitem().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBagItem >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_msgplayerbagitem().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_msgplayerbagitem().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBagItem >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBagItem >::const_iterator
          it = this->_internal_msgplayerbagitem().begin();
          it != this->_internal_msgplayerbagitem().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MsgHero_MsgPlayerBagItemEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBagItem >::const_iterator
          it = this->_internal_msgplayerbagitem().begin();
          it != this->_internal_msgplayerbagitem().end(); ++it) {
        target = MsgHero_MsgPlayerBagItemEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
      }
    }
  }

  // map<int32, int32> attrs = 5;
  if (!this->_internal_attrs().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_attrs().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_attrs().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_attrs().begin();
          it != this->_internal_attrs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MsgHero_AttrsEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_attrs().begin();
          it != this->_internal_attrs().end(); ++it) {
        target = MsgHero_AttrsEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgHero)
  return target;
}

size_t MsgHero::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgHero)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .MsgPlayerBagItem> msgPlayerBagItem = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_msgplayerbagitem_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBagItem >::const_iterator
      it = this->_internal_msgplayerbagitem().begin();
      it != this->_internal_msgplayerbagitem().end(); ++it) {
    total_size += MsgHero_MsgPlayerBagItemEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, int32> attrs = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_attrs_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
      it = this->_internal_attrs().begin();
      it != this->_internal_attrs().end(); ++it) {
    total_size += MsgHero_AttrsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 lv = 3;
  if (this->lv() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_lv());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgHero::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgHero)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgHero* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgHero>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgHero)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgHero)
    MergeFrom(*source);
  }
}

void MsgHero::MergeFrom(const MsgHero& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgHero)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msgplayerbagitem_.MergeFrom(from.msgplayerbagitem_);
  attrs_.MergeFrom(from.attrs_);
  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.lv() != 0) {
    _internal_set_lv(from._internal_lv());
  }
}

void MsgHero::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgHero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHero::CopyFrom(const MsgHero& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgHero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHero::IsInitialized() const {
  return true;
}

void MsgHero::InternalSwap(MsgHero* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msgplayerbagitem_.Swap(&other->msgplayerbagitem_);
  attrs_.Swap(&other->attrs_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgHero, lv_)
      + sizeof(MsgHero::lv_)
      - PROTOBUF_FIELD_OFFSET(MsgHero, uid_)>(
          reinterpret_cast<char*>(&uid_),
          reinterpret_cast<char*>(&other->uid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgHero::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

MsgPlayer_MsgPlayerBagEntry_DoNotUse::MsgPlayer_MsgPlayerBagEntry_DoNotUse() {}
MsgPlayer_MsgPlayerBagEntry_DoNotUse::MsgPlayer_MsgPlayerBagEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MsgPlayer_MsgPlayerBagEntry_DoNotUse::MergeFrom(const MsgPlayer_MsgPlayerBagEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MsgPlayer_MsgPlayerBagEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MsgPlayer_MsgPlayerBagEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

MsgPlayer_MsgHeroEntry_DoNotUse::MsgPlayer_MsgHeroEntry_DoNotUse() {}
MsgPlayer_MsgHeroEntry_DoNotUse::MsgPlayer_MsgHeroEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MsgPlayer_MsgHeroEntry_DoNotUse::MergeFrom(const MsgPlayer_MsgHeroEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MsgPlayer_MsgHeroEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MsgPlayer_MsgHeroEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class MsgPlayer::_Internal {
 public:
};

MsgPlayer::MsgPlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  msgplayerbag_(arena),
  msghero_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MsgPlayer)
}
MsgPlayer::MsgPlayer(const MsgPlayer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msgplayerbag_.MergeFrom(from.msgplayerbag_);
  msghero_.MergeFrom(from.msghero_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:MsgPlayer)
}

void MsgPlayer::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
uid_ = 0;
}

MsgPlayer::~MsgPlayer() {
  // @@protoc_insertion_point(destructor:MsgPlayer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgPlayer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MsgPlayer::ArenaDtor(void* object) {
  MsgPlayer* _this = reinterpret_cast< MsgPlayer* >(object);
  (void)_this;
}
void MsgPlayer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgPlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MsgPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgPlayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgplayerbag_.Clear();
  msghero_.Clear();
  name_.ClearToEmpty();
  uid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgPlayer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MsgPlayer.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<int32, .MsgPlayerBag> msgPlayerBag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&msgplayerbag_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // map<int32, .MsgHero> msgHero = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&msghero_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgPlayer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPlayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MsgPlayer.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // map<int32, .MsgPlayerBag> msgPlayerBag = 3;
  if (!this->_internal_msgplayerbag().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBag >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_msgplayerbag().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_msgplayerbag().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBag >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBag >::const_iterator
          it = this->_internal_msgplayerbag().begin();
          it != this->_internal_msgplayerbag().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MsgPlayer_MsgPlayerBagEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBag >::const_iterator
          it = this->_internal_msgplayerbag().begin();
          it != this->_internal_msgplayerbag().end(); ++it) {
        target = MsgPlayer_MsgPlayerBagEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
      }
    }
  }

  // map<int32, .MsgHero> msgHero = 4;
  if (!this->_internal_msghero().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgHero >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_msghero().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_msghero().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgHero >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgHero >::const_iterator
          it = this->_internal_msghero().begin();
          it != this->_internal_msghero().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MsgPlayer_MsgHeroEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgHero >::const_iterator
          it = this->_internal_msghero().begin();
          it != this->_internal_msghero().end(); ++it) {
        target = MsgPlayer_MsgHeroEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPlayer)
  return target;
}

size_t MsgPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgPlayer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .MsgPlayerBag> msgPlayerBag = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_msgplayerbag_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgPlayerBag >::const_iterator
      it = this->_internal_msgplayerbag().begin();
      it != this->_internal_msgplayerbag().end(); ++it) {
    total_size += MsgPlayer_MsgPlayerBagEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int32, .MsgHero> msgHero = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_msghero_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::MsgHero >::const_iterator
      it = this->_internal_msghero().begin();
      it != this->_internal_msghero().end(); ++it) {
    total_size += MsgPlayer_MsgHeroEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgPlayer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgPlayer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgPlayer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgPlayer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgPlayer)
    MergeFrom(*source);
  }
}

void MsgPlayer::MergeFrom(const MsgPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msgplayerbag_.MergeFrom(from.msgplayerbag_);
  msghero_.MergeFrom(from.msghero_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
}

void MsgPlayer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPlayer::CopyFrom(const MsgPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPlayer::IsInitialized() const {
  return true;
}

void MsgPlayer::InternalSwap(MsgPlayer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msgplayerbag_.Swap(&other->msgplayerbag_);
  msghero_.Swap(&other->msghero_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgPlayer::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::MsgPlayerBagItem_AttrEntry_DoNotUse* Arena::CreateMaybeMessage< ::MsgPlayerBagItem_AttrEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MsgPlayerBagItem_AttrEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::MsgPlayerBagItem_DynaAttrEntry_DoNotUse* Arena::CreateMaybeMessage< ::MsgPlayerBagItem_DynaAttrEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MsgPlayerBagItem_DynaAttrEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::MsgPlayerBagItem* Arena::CreateMaybeMessage< ::MsgPlayerBagItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MsgPlayerBagItem >(arena);
}
template<> PROTOBUF_NOINLINE ::MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse* Arena::CreateMaybeMessage< ::MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MsgPlayerBag_MsgPlayerBagItemEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::MsgPlayerBag* Arena::CreateMaybeMessage< ::MsgPlayerBag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MsgPlayerBag >(arena);
}
template<> PROTOBUF_NOINLINE ::MsgHero_MsgPlayerBagItemEntry_DoNotUse* Arena::CreateMaybeMessage< ::MsgHero_MsgPlayerBagItemEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MsgHero_MsgPlayerBagItemEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::MsgHero_AttrsEntry_DoNotUse* Arena::CreateMaybeMessage< ::MsgHero_AttrsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MsgHero_AttrsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::MsgHero* Arena::CreateMaybeMessage< ::MsgHero >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MsgHero >(arena);
}
template<> PROTOBUF_NOINLINE ::MsgPlayer_MsgPlayerBagEntry_DoNotUse* Arena::CreateMaybeMessage< ::MsgPlayer_MsgPlayerBagEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MsgPlayer_MsgPlayerBagEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::MsgPlayer_MsgHeroEntry_DoNotUse* Arena::CreateMaybeMessage< ::MsgPlayer_MsgHeroEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MsgPlayer_MsgHeroEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::MsgPlayer* Arena::CreateMaybeMessage< ::MsgPlayer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MsgPlayer >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
